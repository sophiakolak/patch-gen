{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7222626484993001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7286335731533}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.730201386521}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7333850162187}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.737535127478}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7379800278882999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7389593552195}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.739078304085}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7412328910920001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7428319205513}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.743019677163}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7448318647302999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7462195554713}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7469541560563}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.747275947007}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7472819685488999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7472826762382001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.747372854047}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7473857974313}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.749426632726}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7530183816598001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7532816898174999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7542614996113}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7556759469309999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.756599627917}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7571057681123}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.757994902157}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7583614147486}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7584830337790001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7586119446485}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7621096527803}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7627567817485}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7652857466753}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.767292642477}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7681086503682}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7688806009629999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.770272785427}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.772104231793}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.772353908233}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.773203571579}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.773222989393}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7733759808113}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7741201452515}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7744003709405}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7756471158505001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.776243995355}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7775073679955999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7847659913203}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7860919275026}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7867689321288001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7881403439653}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7883479544982999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7894039182155}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7898705928453}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.792168423491}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.794788718346}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7949561104716001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.7965821142220001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8033554012663}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8057624885063}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.843826654473}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8582528620919999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8665891268279999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8677678610854}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8729294587399999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.873007384538}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8750009211490001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8754230508655999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8778925300679999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8815038325790001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8856604146783}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8912107861475}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.89177964752}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8965133536643}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8996163979}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.8997609852225}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9010451508410001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9010452710410001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9067970934369}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9076438069223001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.907896884681}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9085303260713}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9090857599790001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9108020961350001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9128244914819}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9128961206774}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.914889060808}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9155391949923}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9158263330424}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.915856359375}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9163544380829999}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9213398289085}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.926950486791}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.9334735781913001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 0.938573393047}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x > pivot])", "entropy": 3.8105041092854997}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x > pivot])", "entropy": 3.8621301965525006}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x > pivot])", "entropy": 3.9556638855713}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    bigger = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 4.750646423647001}
{"context": "def quicksort(arr):\n    if not arr:\n        return []\n\n    pivot = arr[0]\n    lesser = quicksort([x for x in arr[1:] if x < pivot])\n", "text": "    greater = quicksort([x for x in arr[1:] if x >= pivot])", "entropy": 4.7619905786074}
