{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.4922708019493999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.49266022852830005}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.49309289209750007}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.4933134349863999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.495449857079}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.4955846959324}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.49657137169139987}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.4973191163684}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.49753108148630004}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.49765602721399993}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.497752569798}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5000049991273}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5001128099209999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5007510458884001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5012041591762999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5014139130459999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5028344010040001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5037275362294}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5048289073922999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5059993697943}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5061000760504}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5064663195480001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.507468089601}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5075038213624999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5075464147414}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5076365650204}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.507818793652}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.508064639701}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5080774458635}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5081468021695}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5087337518889999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5089465676153}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5097604186414}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5099528188483999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5105765629014002}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.510912222013}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5109238672302999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5113145824424999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5113828384949999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5115875842143999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5117422513863}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5121212325314001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5121620778980001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5122313964703}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5123379242420001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5132689197124}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5136790762683001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5137746337043999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5146439459529999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.514696730358}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.514823087232}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.515279616306}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5160961076243}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.516418548721}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5166197517293}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5171666591399998}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5177159122520001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5180867420824}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5181710134400002}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5184906345220001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5192003169413001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5194912834669999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5196564583469999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5197055856324}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5200406218863999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5203649180593999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5212228809790002}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5225745633575}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5226846820030001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5237527321579999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.526000993346}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.527296873231}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.527463591694}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5279255839413}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5321243842833}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5334922988890001}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.534446845873}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5355712058772999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5403869185829999}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.5416027686514}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 0.542187552071}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "", "entropy": 7.12184820365}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 2.3206671187664}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 2.3683682510525004}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 2.391020938188}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 2.3986956905614}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 2.4059697594719998}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 2.445811795412}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 3.537611275972499}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 3.5596316661442997}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 3.5892342270255}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 4.2548981137415}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 4.2651284704500005}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return str(a[0]) + longest_common_subsequence(a[1:], b[1:])", "entropy": 4.6846618988170015}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 6.243479438378}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 6.4234849370434}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 6.5048832020754}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 10.066201573461399}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + longest_common_subsequence(a[1:], b[1:])", "entropy": 12.1041668718045}
{"context": "def longest_common_subsequence(a, b):\n    if not a or not b:\n        return ''\n\n    elif a[0] == b[0]:\n", "text": "        return a[0] + length(a[1:], b[1:])", "entropy": 13.64639305023}
