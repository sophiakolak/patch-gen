{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.8407580485513404}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.8487787481192997}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.8526776510973995}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.8555630750723413}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.884688174925341}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.9131644243234396}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.92289608658214}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.9330265052293996}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.94787685516707}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 2.9607205299454002}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.16955629182056}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.29761596734693}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.301420648906939}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.30183937718839}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.3202933620656214}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.3246331436021195}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.3473278663766903}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.3565594773277794}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.4577859894506604}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).issuperset(nextnode.incoming_nodes):", "entropy": 3.5700336522492204}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if ordered_nodes.count(nextnode) == 0:", "entropy": 2.992613776616399}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if ordered_nodes.count(nextnode) == 0:", "entropy": 3.03147094766294}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if ordered_nodes.count(nextnode) == 0:", "entropy": 3.0594886059733994}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.0625054851000004}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if ordered_nodes.count(nextnode) == 0:", "entropy": 3.149423476117999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.17257114993}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.1760864924700005}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.1852756767099994}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if ordered_nodes.count(nextnode) == 0:", "entropy": 3.1964283996539993}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.27502011923}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.3236492411000005}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.3299676161900007}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all((inode in ordered_nodes) for inode in nextnode.incoming_nodes):", "entropy": 4.693756096770201}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all((inode in ordered_nodes) for inode in nextnode.incoming_nodes):", "entropy": 4.709216627481601}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all((inode in ordered_nodes) for inode in nextnode.incoming_nodes):", "entropy": 4.917725915767697}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(incoming in ordered_nodes for incoming in nextnode.incoming_nodes):", "entropy": 4.928744069821999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.719165588692}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.4638290521080006}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.4650281445370004}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).isdisjoint(nextnode.incoming_nodes):", "entropy": 5.339925042672799}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(pred in ordered_nodes for pred in nextnode.incoming_nodes):", "entropy": 5.3583439189346995}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.517904100801}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 3.9686600250399993}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(pred in ordered_nodes for pred in nextnode.incoming_nodes):", "entropy": 5.4600677409472995}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 4.031792183197999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.5970257915739996}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.6015939713560003}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.6123618873370003}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.6902115761159995}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.7105236395399994}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 2.829554376358}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 4.51451946083}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 4.569915121949999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes) >= set(nextnode.incoming_nodes):", "entropy": 4.624529711480942}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 4.76356653489}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 4.99110374786}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes) >= set(nextnode.incoming_nodes):", "entropy": 5.035308476908799}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes) & set(nextnode.incoming_nodes):", "entropy": 5.192488868273499}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(parent in ordered_nodes for parent in nextnode.incoming_nodes):", "entropy": 7.083303844078401}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all((predecessor in ordered_nodes) for predecessor in nextnode.incoming_nodes):", "entropy": 7.3557297969495}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 5.561871058933001}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 5.609266852287}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 5.61932237149}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all((inode in ordered_nodes for inode in nextnode.incoming_nodes)):", "entropy": 7.7714775592262}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(i_node in ordered_nodes for i_node in nextnode.incoming_nodes):", "entropy": 7.7999398109819005}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:", "entropy": 3.8476446220899994}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:", "entropy": 3.9146771762799997}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes).intersection(nextnode.incoming_nodes) == \\", "entropy": 8.519414649729669}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:", "entropy": 4.00889618643}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in nodes:", "entropy": 4.12858396191}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 6.495439958266}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in ordered_nodes:", "entropy": 4.14461592344}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes", "entropy": 4.1892150238468995}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes", "entropy": 4.2106847741455}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in ordered_nodes:", "entropy": 4.255078323298}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in ordered_nodes:", "entropy": 4.25539531052}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in nodes:", "entropy": 4.267661520600001}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes", "entropy": 4.5035457394347}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in nodes:", "entropy": 4.529181221779999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 7.3529978251}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.remove_incoming_node(node)", "entropy": 4.7268476969}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode.incoming_nodes.issubset(set(ordered_nodes)):", "entropy": 10.2870765608702}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in ordered_nodes:", "entropy": 4.872747216815999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not ordered_nodes.count(nextnode):", "entropy": 4.93085459502}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if set(ordered_nodes) != set(nextnode.incoming_nodes):", "entropy": 8.88576658201194}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 9.385348774436999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 9.633323215860003}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nodes.remove(nextnode)", "entropy": 6.455855497577001}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node not in nextnode.incoming_nodes:", "entropy": 10.20056669754}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in ordered_nodes:", "entropy": 6.576792295275999}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:", "entropy": 6.623050955935001}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if all(predecessor in ordered_nodes for predecessor in nextnode.incoming_nodes):", "entropy": 14.2533738737222}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nodes.remove(nextnode)", "entropy": 6.6676232426599995}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 11.21764707198}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in ordered_nodes:", "entropy": 7.154416142939}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.visited:", "entropy": 7.726310679100001}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.add_incoming_nodes([node for node in node.incoming_nodes])", "entropy": 17.011554747824004}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            nextnode.incoming_nodes.remove(node)", "entropy": 13.670927121339998}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in ordered_nodes:", "entropy": 10.184289785342}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            linknode_and_nextnode(node, nextnode)", "entropy": 19.750338401039997}
