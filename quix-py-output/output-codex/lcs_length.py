{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.526270014924}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.541955187654}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5452947254800005}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.547006383555}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.548556703336}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5534991002039997}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5546431573300001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.555482285104}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5560359715700003}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5580945764100003}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.55834063886}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5629244599429994}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5663926099130001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.571305868224}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5715698745400002}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.575404231328}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5757301465050007}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5778718946449999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5815957794099993}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5819294952229999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5857151254559994}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.585907867344}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.58591048712}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.59050146255}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.5916985191510007}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.6067505223489995}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 1.6072680170130003}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2125590965100006}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2165400182399995}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.225546066477999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2486082873350006}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.24905936706}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2543242577899996}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2569483542960005}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2579672291300006}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.264464515743999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2671738445199994}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.270826110591}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2728480093149996}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.27624956547}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.27862905362}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2812891095}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.2850125380360002}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.294764905380001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.305060867190001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.306980235429999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.3072589320100003}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.3102309249350004}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.3124355177399996}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 2.329100188585999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i + 1, j + 1)] = dp[(i, j)] + 1", "entropy": 3.1321947279680007}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i + 1, j + 1)] = dp[(i, j)] + 1", "entropy": 3.157970409598001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i + 1, j + 1)] = dp[(i, j)] + 1", "entropy": 3.2069236861340005}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i - 1, j - 1)] + 1", "entropy": 3.2071343002700003}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i + 1, j + 1] = dp[i, j] + 1", "entropy": 3.223565643291999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i - 1, j - 1)] + 1", "entropy": 3.23248291076}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i + 1, j + 1)] = dp[(i, j)] + 1", "entropy": 3.2336826488640016}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i + 1, j + 1)] = dp[(i, j)] + 1", "entropy": 3.2547015497350005}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i - 1, j - 1)] + 1", "entropy": 3.26068296961}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i - 1, j - 1)] + 1", "entropy": 3.26475558919}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i - 1, j - 1)] + 1", "entropy": 3.2650463785}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i + 1, j + 1] = dp[i, j] + 1", "entropy": 3.283262972614002}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i - 1, j - 1)] + 1", "entropy": 3.298394775874}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i + 1, j + 1)] = dp[(i, j)] + 1", "entropy": 3.3132306036089996}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i - 1, j - 1)] + 1", "entropy": 3.3187229269299983}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i + 1, j + 1)] = dp[(i, j)] + 1", "entropy": 3.32770036652}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[i - 1, j - 1] + 1", "entropy": 3.7514113669799993}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[i - 1, j - 1] + 1", "entropy": 3.8227319087900007}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[i - 1, j - 1] + 1", "entropy": 3.8288395055699995}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[i - 1, j - 1] + 1", "entropy": 3.85326770498}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[i - 1, j - 1] + 1", "entropy": 3.898192660309999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = dp[(i-1, j-1)] + 1", "entropy": 3.9784631836}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = 1 + dp[i - 1, j - 1]", "entropy": 4.1112743122049995}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = 1 + dp[i - 1, j - 1]", "entropy": 4.170690161240001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i+1, j+1] = dp[i, j] + 1", "entropy": 4.20338356458}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i,j] = dp[i-1,j-1] + 1", "entropy": 4.435362179122001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i,j] = dp[i-1,j-1] + 1", "entropy": 4.448222893364}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i,j] = dp[i-1,j-1] + 1", "entropy": 4.493589244560001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 4.584333527385}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 4.684377564413}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i - 1, j - 1] + 1", "entropy": 4.7265846869959995}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                if i == 0 or j == 0:", "entropy": 2.4665920304800006}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                if i == 0 or j == 0:", "entropy": 2.469100665310001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i,j] = dp[i-1, j-1] + 1", "entropy": 5.325564118033001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                if i == 0 or j == 0:", "entropy": 2.49289194938}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                if i == 0 or j == 0:", "entropy": 2.5295957326499994}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                if i == 0 or j == 0:", "entropy": 2.540962639440001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = 1 + dp[(i-1, j-1)]", "entropy": 5.715287577410001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i+1, j+1)] = dp[(i,j)] + 1", "entropy": 5.961262380620001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i+1, j+1] = dp[i,j] + 1", "entropy": 6.1697945086339985}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[j, i+1] = dp[j-1, i] + 1", "entropy": 6.219953565950001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 6.302741953000001}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i, j] = dp[i-1, j-1] + 1", "entropy": 7.392307384149999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                c = dp[i - 1, j - 1] + 1", "entropy": 6.138049555309999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = max(dp[(i, j)], dp[(i-1, j-1)]+1)", "entropy": 11.325879062039995}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[i+1, j+1] = dp[i,j]+1", "entropy": 8.08367591635}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                if i != 0 and j != 0:", "entropy": 5.562635002070002}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                if i != 0 and j != 0:", "entropy": 5.565519143669999}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                c = dp[j - 1] + 1 if i and j else 1", "entropy": 13.208332556640002}
{"context": "def lcs_length(s, t):\n    from collections import Counter\n\n    dp = Counter()\n\n    for i in range(len(s)):\n        for j in range(len(t)):\n            if s[i] == t[j]:\n", "text": "                dp[(i, j)] = (", "entropy": 9.683335278500001}
