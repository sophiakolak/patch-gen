{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3484813255499999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3491149408849996}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3495809307749997}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3495811406749996}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.35043428664}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.35043428664}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.35043428664}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.350758394844}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.35224562243}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3535760365499996}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.35572421253}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3564260686300003}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3576537566700002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3580467191849996}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3624629980150003}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3645804646999997}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.36905273467}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.369510507354}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.37018921622}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.37018921622}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.37074082487}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3708286621439998}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.37332107592}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3745313481540005}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3767741511140001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3791126094700001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.38150012622}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.382178714426}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.382178714426}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3830402436400002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3830405233400003}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3830405233400003}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.39280495278}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.39280495278}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3951922963199999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3953511659000002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.3978184069600004}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.400432790204}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.40153700214}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4022386284400001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.40790343838}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.41401077118}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4149146830100003}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4149151800100002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4165566594699999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.41688617271}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.42068051658}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.422115722774}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4225155748599998}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4268815560499999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.42709985942}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4270999790199999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.427233260345}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.427233260945}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4283101529700002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4310558487100002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4318053508560002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4389257513000002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k, len(arr)):", "entropy": 1.4407801774959996}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in xrange(k, len(arr)):", "entropy": 3.64902623787}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in xrange(k, len(arr)):", "entropy": 3.6925626603400006}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in xrange(k, len(arr)):", "entropy": 3.6928533614699997}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for index in range(k, len(arr)):", "entropy": 4.0482469009}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in arr[k:]:", "entropy": 4.1453565904}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in arr[k:]:", "entropy": 4.1740143199}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in arr[k:]:", "entropy": 4.1932666763}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for x in arr[k:]:", "entropy": 4.2924786258}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for item in arr[k:]:", "entropy": 4.3217770203}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for item in arr[k:]:", "entropy": 4.3784768582}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for item in arr[k:]:", "entropy": 4.4046356269}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in arr[k:]:", "entropy": 4.4077565746000005}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for item in arr[k:]:", "entropy": 4.4103504443}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for x in arr[k:]:", "entropy": 4.4377373986}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for idx in range(k, len(arr)):", "entropy": 4.443408623185}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for x in arr[k:]:", "entropy": 4.444135246499999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for x in arr[k:]:", "entropy": 4.461628817299999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for item in arr[k:]:", "entropy": 4.466581230799999}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for element in arr[k:]:", "entropy": 4.9522498817}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for j in range(k, len(arr)):", "entropy": 4.99442687132}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k,len(arr)):", "entropy": 5.3954807991600005}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for i in range(k,len(arr)):", "entropy": 5.4297362936399995}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for index in xrange(k, len(arr)):", "entropy": 5.667536834990001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for it in arr[k:]:", "entropy": 6.591236425900001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for el in arr[k:]:", "entropy": 6.853789715000001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for x in arr[k:]:", "entropy": 6.97700740575}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for x in arr[k:]:", "entropy": 7.1274514543}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for position in range(k, len(arr)):", "entropy": 8.634815708394997}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    result = []", "entropy": 3.8820438925}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    result = []", "entropy": 3.9126504708}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for j in arr[k:]:", "entropy": 9.506509855500001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for element in arr[k:]:", "entropy": 9.8264556267}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for v in arr[k:]:", "entropy": 10.059546077530001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for each in arr[k:]:", "entropy": 12.260706359300002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    last = arr[0]", "entropy": 12.411072444000002}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    ret = []", "entropy": 5.4868914625}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for each in arr[k:]:", "entropy": 12.960534197299996}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    i = 0", "entropy": 6.0695071439}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    for x in arr:", "entropy": 6.201321694}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    ans = []", "entropy": 6.745788236000001}
{"context": "def kheapsort(arr, k):\n    import heapq\n\n    heap = arr[:k]\n    heapq.heapify(heap)\n\n", "text": "    ind = k", "entropy": 9.988927424}
