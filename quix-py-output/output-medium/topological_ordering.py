{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 8.022430419921875}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 8.33915400505066}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 8.248997211456299}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 8.089409589767456}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 7.987872362136841}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 7.897171974182129}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 7.8596179485321045}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 7.863524913787842}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 7.966267824172974}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes:\n", "entropy": 2.2807700634002686, "length": 256, "finished": false, "message": null, "duration_seconds": 7.900906801223755}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode.incoming_nodes:\n", "entropy": 2.6201701164245605, "length": 256, "finished": false, "message": null, "duration_seconds": 8.18562912940979}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode.incoming_nodes:\n", "entropy": 2.6201701164245605, "length": 256, "finished": false, "message": null, "duration_seconds": 7.844870328903198}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode.incoming_nodes:\n", "entropy": 2.6201701164245605, "length": 256, "finished": false, "message": null, "duration_seconds": 9.305263042449951}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topological_ordering(nextnode)\n", "entropy": 2.8733654022216797, "length": 256, "finished": false, "message": null, "duration_seconds": 8.037109136581421}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topological_ordering(nextnode)\n", "entropy": 2.8733654022216797, "length": 256, "finished": false, "message": null, "duration_seconds": 7.876178979873657}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topological_ordering(nextnode)\n", "entropy": 2.8733654022216797, "length": 256, "finished": false, "message": null, "duration_seconds": 7.937422752380371}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topological_ordering(nextnode)\n", "entropy": 2.8733654022216797, "length": 256, "finished": false, "message": null, "duration_seconds": 7.856157064437866}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            yield nextnode\n", "entropy": 3.3923144340515137, "length": 256, "finished": false, "message": null, "duration_seconds": 7.865368604660034}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            yield nextnode\n", "entropy": 3.3923144340515137, "length": 256, "finished": false, "message": null, "duration_seconds": 9.294268131256104}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            yield node, nextnode\n", "entropy": 3.4115450382232666, "length": 256, "finished": false, "message": null, "duration_seconds": 7.965230464935303}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            yield node, nextnode\n", "entropy": 3.4115450382232666, "length": 256, "finished": false, "message": null, "duration_seconds": 8.18911075592041}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            yield node, nextnode\n", "entropy": 3.4115450382232666, "length": 256, "finished": false, "message": null, "duration_seconds": 7.8494110107421875}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 7.9385130405426025}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 7.894450426101685}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 7.909789800643921}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 7.96692681312561}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 8.290140151977539}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 8.076557159423828}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 7.8915815353393555}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes:\n", "entropy": 3.492882251739502, "length": 256, "finished": false, "message": null, "duration_seconds": 9.465104341506958}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            node.incoming_nodes.remove(nextnode)\n", "entropy": 4.072779655456543, "length": 256, "finished": false, "message": null, "duration_seconds": 7.896011829376221}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            node.incoming_nodes.remove(nextnode)\n", "entropy": 4.072779655456543, "length": 256, "finished": false, "message": null, "duration_seconds": 7.927490234375}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode.outgoing_nodes:\n", "entropy": 4.4019951820373535, "length": 256, "finished": false, "message": null, "duration_seconds": 8.694276571273804}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:\n", "entropy": 4.428642272949219, "length": 256, "finished": false, "message": null, "duration_seconds": 8.333850860595703}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode not in ordered_nodes:\n", "entropy": 4.428642272949219, "length": 256, "finished": false, "message": null, "duration_seconds": 7.930187463760376}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.outgoing_nodes:\n", "entropy": 4.536685943603516, "length": 256, "finished": false, "message": null, "duration_seconds": 8.115704774856567}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            ordered_nodes.append(nextnode)\n", "entropy": 4.691656112670898, "length": 256, "finished": false, "message": null, "duration_seconds": 7.81775689125061}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topological_ordering(nextnode.incoming_nodes)\n", "entropy": 4.758654594421387, "length": 256, "finished": false, "message": null, "duration_seconds": 7.887792348861694}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.outgoing_nodes:\n", "entropy": 5.263699531555176, "length": 256, "finished": false, "message": null, "duration_seconds": 9.44591999053955}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node not in ordered_nodes:\n", "entropy": 5.3659515380859375, "length": 256, "finished": false, "message": null, "duration_seconds": 8.098959922790527}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node not in ordered_nodes:\n", "entropy": 5.3659515380859375, "length": 256, "finished": false, "message": null, "duration_seconds": 8.008100748062134}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for outgoing_node in nextnode.incoming_nodes:\n", "entropy": 5.377805233001709, "length": 256, "finished": false, "message": null, "duration_seconds": 7.926926136016846}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode in nodes:\n", "entropy": 5.508519172668457, "length": 256, "finished": false, "message": null, "duration_seconds": 8.079422235488892}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            try:\n", "entropy": 5.997323513031006, "length": 256, "finished": false, "message": null, "duration_seconds": 9.419607400894165}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for next_node in nextnode.incoming_nodes:\n", "entropy": 6.14800500869751, "length": 256, "finished": false, "message": null, "duration_seconds": 8.203013896942139}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for next_node in nextnode.incoming_nodes:\n", "entropy": 6.14800500869751, "length": 256, "finished": false, "message": null, "duration_seconds": 8.406884670257568}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node not in nodes:\n", "entropy": 6.507706642150879, "length": 256, "finished": false, "message": null, "duration_seconds": 8.191499948501587}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for outgoing_node in node.incoming_nodes:\n", "entropy": 6.6254119873046875, "length": 256, "finished": false, "message": null, "duration_seconds": 8.11873197555542}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topological_ordering(node.incoming_nodes)\n", "entropy": 6.786663055419922, "length": 256, "finished": false, "message": null, "duration_seconds": 7.892596483230591}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topological_ordering(node.incoming_nodes)\n", "entropy": 6.786663055419922, "length": 256, "finished": false, "message": null, "duration_seconds": 7.967337608337402}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            yield (node, nextnode)\n", "entropy": 7.083181381225586, "length": 256, "finished": false, "message": null, "duration_seconds": 7.8626203536987305}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for child in nextnode.incoming_nodes:\n", "entropy": 7.423995494842529, "length": 256, "finished": false, "message": null, "duration_seconds": 8.040417432785034}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for edge in nextnode.incoming_edges:\n", "entropy": 7.688563346862793, "length": 256, "finished": false, "message": null, "duration_seconds": 7.819479703903198}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            assert nextnode.incoming_nodes == [node]\n", "entropy": 7.766770839691162, "length": 256, "finished": false, "message": null, "duration_seconds": 7.84477424621582}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.outgoing_nodes[0].incoming_nodes:\n", "entropy": 7.805354118347168, "length": 256, "finished": false, "message": null, "duration_seconds": 8.18160629272461}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes and not nextnode.incoming_nodes:\n", "entropy": 7.842346668243408, "length": 256, "finished": false, "message": null, "duration_seconds": 8.183724403381348}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node in nodes:\n", "entropy": 7.8833794593811035, "length": 256, "finished": false, "message": null, "duration_seconds": 8.59982943534851}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if len(node.outgoing_nodes) == 1:\n", "entropy": 8.318517684936523, "length": 256, "finished": false, "message": null, "duration_seconds": 9.39879059791565}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            ordered_nodes.append(node.outgoing_nodes[nextnode])\n", "entropy": 8.577484130859375, "length": 256, "finished": false, "message": null, "duration_seconds": 8.088193893432617}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes or not node.incoming_nodes[0]:\n", "entropy": 8.71187686920166, "length": 256, "finished": false, "message": null, "duration_seconds": 8.073137760162354}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            assert nextnode is not None\n", "entropy": 8.935163497924805, "length": 256, "finished": false, "message": null, "duration_seconds": 7.940674304962158}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node.incoming_nodes != nextnode:\n", "entropy": 9.362680435180664, "length": 256, "finished": false, "message": null, "duration_seconds": 7.93092679977417}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes or nextnode.incoming_nodes[0] != node:\n", "entropy": 9.551443099975586, "length": 256, "finished": false, "message": null, "duration_seconds": 8.097738265991211}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            add_node(nextnode)\n", "entropy": 10.048001289367676, "length": 256, "finished": false, "message": null, "duration_seconds": 8.0105619430542}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node.incoming_nodes == []:\n", "entropy": 10.125787734985352, "length": 256, "finished": false, "message": null, "duration_seconds": 8.018227100372314}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            node.set_incoming_node(nextnode)\n", "entropy": 10.17182731628418, "length": 256, "finished": false, "message": null, "duration_seconds": 7.8144166469573975}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for next in node.outgoing_nodes[nextnode]:\n", "entropy": 10.45655345916748, "length": 256, "finished": false, "message": null, "duration_seconds": 7.935302972793579}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            outgoing_nodes = [node for node in nextnode if not node.incoming_nodes]\n", "entropy": 10.610467910766602, "length": 256, "finished": false, "message": null, "duration_seconds": 8.248807668685913}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not nextnode.incoming_nodes or nextnode.incoming_nodes.index(node) < 0:\n", "entropy": 10.833749771118164, "length": 256, "finished": false, "message": null, "duration_seconds": 7.798492193222046}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for neighbors in nextnode.neighbors:\n", "entropy": 11.301941871643066, "length": 256, "finished": false, "message": null, "duration_seconds": 7.847300052642822}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode != node and not nextnode.incoming_nodes:\n", "entropy": 11.447663307189941, "length": 256, "finished": false, "message": null, "duration_seconds": 8.271471977233887}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if nextnode.node_id < node.node_id:\n", "entropy": 12.071235656738281, "length": 256, "finished": false, "message": null, "duration_seconds": 7.924720048904419}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if len(nextnode.incoming_nodes) > 0 and not nextnode.incoming_nodes[0].outgoing_nodes:\n", "entropy": 12.071695327758789, "length": 256, "finished": false, "message": null, "duration_seconds": 7.943609952926636}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            node_nodes.append(nextnode)\n", "entropy": 13.228998184204102, "length": 256, "finished": false, "message": null, "duration_seconds": 8.392030000686646}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            topology = nextnode.topological_ordering()\n", "entropy": 13.262968063354492, "length": 256, "finished": false, "message": null, "duration_seconds": 7.839531421661377}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for neighbors in node.incoming_nodes:\n", "entropy": 13.63337516784668, "length": 256, "finished": false, "message": null, "duration_seconds": 8.348249197006226}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            path = nextnode.name\n", "entropy": 14.031399726867676, "length": 256, "finished": false, "message": null, "duration_seconds": 8.08390212059021}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            subgraph_order = topological_ordering(nextnode.incoming_nodes)\n", "entropy": 14.206596374511719, "length": 256, "finished": false, "message": null, "duration_seconds": 7.770749568939209}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            refs = [nextnode]\n", "entropy": 15.248196601867676, "length": 256, "finished": false, "message": null, "duration_seconds": 8.210909843444824}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            parent = nextnode.next\n", "entropy": 15.486474990844727, "length": 256, "finished": false, "message": null, "duration_seconds": 8.051987648010254}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # Proper ordering\n", "entropy": 16.253816604614258, "length": 256, "finished": false, "message": null, "duration_seconds": 8.244752883911133}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if hasattr(nextnode, 'number'):\n", "entropy": 16.331096649169922, "length": 256, "finished": false, "message": null, "duration_seconds": 7.775775194168091}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if not node.incoming_nodes or node.incoming_nodes_id != nextnode.incoming_nodes_id:\n", "entropy": 16.41132926940918, "length": 256, "finished": false, "message": null, "duration_seconds": 8.153029680252075}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            node_before = nextnode.node\n", "entropy": 16.793039321899414, "length": 256, "finished": false, "message": null, "duration_seconds": 7.975817918777466}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            yield node.id, node.incoming_nodes, sorted(\n", "entropy": 17.419921875, "length": 256, "finished": false, "message": null, "duration_seconds": 9.421055555343628}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # New node in the list\n", "entropy": 19.119613647460938, "length": 256, "finished": false, "message": null, "duration_seconds": 7.761633396148682}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            ordered_nodes.append(node.clone(incoming_nodes=node.incoming_nodes, outgoing_nodes=nextnode))\n", "entropy": 19.388648986816406, "length": 256, "finished": false, "message": null, "duration_seconds": 7.965126991271973}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # don't push twice\n", "entropy": 20.09999656677246, "length": 256, "finished": false, "message": null, "duration_seconds": 8.10085391998291}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            this_nodes = topological_ordering(node.incoming_nodes)\n", "entropy": 20.32456398010254, "length": 256, "finished": false, "message": null, "duration_seconds": 9.395055770874023}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            node.connected_to[node.incoming_nodes[nextnode]] = True\n", "entropy": 20.56682586669922, "length": 256, "finished": false, "message": null, "duration_seconds": 7.882308483123779}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            for nextnode_index in range(len(nextnode.number_of_nodes)):\n", "entropy": 20.818700790405273, "length": 256, "finished": false, "message": null, "duration_seconds": 7.911361217498779}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            closest_in = None\n", "entropy": 21.23213005065918, "length": 256, "finished": false, "message": null, "duration_seconds": 7.924461841583252}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # We do a topological ordering here so we don't have to deal with\n", "entropy": 26.62655258178711, "length": 256, "finished": false, "message": null, "duration_seconds": 7.948897361755371}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # Return the node with the appropriate parent\n", "entropy": 27.18798065185547, "length": 256, "finished": false, "message": null, "duration_seconds": 7.9017040729522705}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            if node.incoming_nodes and not node.incoming_nodes_first[node.incoming_nodes[-1].id]:\n", "entropy": 27.79409408569336, "length": 256, "finished": false, "message": null, "duration_seconds": 8.166804313659668}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # Make sure nodes of the next node are processed before\n", "entropy": 28.157032012939453, "length": 256, "finished": false, "message": null, "duration_seconds": 7.846454620361328}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # no need to include the remote_nodes\n", "entropy": 28.32449722290039, "length": 256, "finished": false, "message": null, "duration_seconds": 7.759453296661377}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # If the nextnode was a duplicate, we're done with this node\n", "entropy": 29.86016845703125, "length": 256, "finished": false, "message": null, "duration_seconds": 8.131581783294678}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            # Ordering nodes should be monotone to be:\n", "entropy": 43.634429931640625, "length": 256, "finished": false, "message": null, "duration_seconds": 7.926907300949097}
{"context": "def topological_ordering(nodes):\n    ordered_nodes = [node for node in nodes if not node.incoming_nodes]\n\n    for node in ordered_nodes:\n        for nextnode in node.outgoing_nodes:\n", "text": "            assert nextnode in ordered_nodes, 'invalid node in ordering (next node: {}, next node: {})'.format(\n", "entropy": 44.792728424072266, "length": 256, "finished": false, "message": null, "duration_seconds": 7.829833984375}
