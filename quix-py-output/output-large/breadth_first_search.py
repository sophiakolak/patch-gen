{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.576037406921387}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.66360330581665}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.630057096481323}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.605056762695312}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.609829664230347}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.694777011871338}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.569911003112793}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.583903312683105}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 12.006653070449829}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.690714359283447}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.651443004608154}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.648448705673218}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.523853540420532}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.613483428955078}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 12.01874566078186}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.595530033111572}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.668992757797241}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.643699407577515}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.76799201965332}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.716089010238647}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.588798761367798}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.593936681747437}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.5749032497406}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.714765310287476}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.614530801773071}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.5521719455719}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.64115023612976}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.607343673706055}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.629970788955688}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.90719723701477}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.753503799438477}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.615594863891602}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.651244640350342}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.564595937728882}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.657011985778809}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.639253854751587}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.580390691757202}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.666353940963745}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.672565698623657}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.601070642471313}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.578784942626953}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.64107346534729}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.76660966873169}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.728187084197998}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.588820219039917}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 12.047362804412842}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.62460446357727}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.741066455841064}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.840746879577637}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.622660160064697}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.56393313407898}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.727438926696777}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.683415412902832}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.661523342132568}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.596392631530762}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.824450731277466}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.66469144821167}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.578962326049805}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.740461826324463}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.65247917175293}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.8051598072052}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.858218669891357}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.773473739624023}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.71399736404419}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.69112229347229}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.677121639251709}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.788837432861328}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.757766723632812}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.777934551239014}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 12.031187772750854}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.79131269454956}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.740203142166138}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.826780319213867}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.613932847976685}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.630920648574829}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.72489857673645}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.792019605636597}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.695013523101807}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.810229063034058}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.568389415740967}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.72848391532898}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.573017597198486}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.894323110580444}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue:\n", "entropy": 0.18244732916355133, "length": 256, "finished": false, "message": null, "duration_seconds": 11.60993766784668}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.675545454025269}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.612129211425781}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.649944305419922}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.578428268432617}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.671326398849487}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.73678207397461}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.761991262435913}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.597153186798096}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.679473638534546}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.854833602905273}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 11.682114124298096}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) > 0:\n", "entropy": 2.0751254558563232, "length": 256, "finished": false, "message": null, "duration_seconds": 12.384831190109253}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while len(queue) != 0:\n", "entropy": 5.642509460449219, "length": 256, "finished": false, "message": null, "duration_seconds": 11.755924701690674}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue.empty():\n", "entropy": 5.733041763305664, "length": 256, "finished": false, "message": null, "duration_seconds": 11.721460580825806}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while queue and not nodesseen:\n", "entropy": 7.20790433883667, "length": 256, "finished": false, "message": null, "duration_seconds": 11.726121664047241}
{"context": "\nfrom collections import deque as Queue\n\ndef breadth_first_search(startnode, goalnode):\n    queue = Queue()\n    queue.append(startnode)\n\n    nodesseen = set()\n    nodesseen.add(startnode)\n\n", "text": "    while nodesseen:\n", "entropy": 8.272481918334961, "length": 256, "finished": false, "message": null, "duration_seconds": 11.802512407302856}
