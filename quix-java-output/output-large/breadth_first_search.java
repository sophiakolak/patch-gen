{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 14.946592330932617}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.622681856155396}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.201894760131836}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.732049703598022}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.651126384735107}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.706020593643188}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.586036682128906}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.941911935806274}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.509692668914795}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.692642211914062}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.865370750427246}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.03735041618347}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.806835651397705}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.11702561378479}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.541669845581055}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.85346245765686}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.236262321472168}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.605298280715942}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.11403512954712}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.82524800300598}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 19.753647804260254}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.550062894821167}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.651602506637573}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.358476638793945}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 19.064404726028442}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.342888593673706}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.910584926605225}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 18.996221780776978}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 18.309775590896606}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.728758573532104}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.475451231002808}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.837245225906372}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.861785650253296}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 18.665271282196045}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 18.605655431747437}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.192757606506348}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.574037790298462}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.807225704193115}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.417938470840454}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.756261825561523}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.07006025314331}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.03234028816223}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.801565885543823}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.654388427734375}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.321380853652954}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 18.034772872924805}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.244260549545288}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.195820569992065}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.764646768569946}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.702347993850708}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.947367191314697}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.933164834976196}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.10726308822632}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.594534635543823}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.331178426742554}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.248587369918823}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.237046003341675}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.09977436065674}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.60280966758728}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.930034399032593}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.728777885437012}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 18.448835849761963}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 18.691471815109253}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.385759830474854}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 15.834969520568848}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 17.366474628448486}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.3171449303627014, "length": 256, "finished": false, "message": null, "duration_seconds": 16.251333713531494}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 4.539506435394287, "length": 256, "finished": false, "message": null, "duration_seconds": 17.30885148048401}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 4.539506435394287, "length": 256, "finished": false, "message": null, "duration_seconds": 17.713679790496826}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 4.539506435394287, "length": 256, "finished": false, "message": null, "duration_seconds": 15.232227325439453}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 4.539506435394287, "length": 256, "finished": false, "message": null, "duration_seconds": 16.621506690979004}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() != 0) {\n", "entropy": 4.591879367828369, "length": 256, "finished": false, "message": null, "duration_seconds": 15.401369333267212}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() != 0) {\n", "entropy": 4.591879367828369, "length": 256, "finished": false, "message": null, "duration_seconds": 17.1214861869812}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> queue2 = new ArrayDeque<>();\n", "entropy": 4.874091625213623, "length": 256, "finished": false, "message": null, "duration_seconds": 16.528796195983887}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> queue2 = new ArrayDeque<>();\n", "entropy": 4.874091625213623, "length": 256, "finished": false, "message": null, "duration_seconds": 17.86080574989319}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()){\n", "entropy": 5.010702610015869, "length": 256, "finished": false, "message": null, "duration_seconds": 15.193631887435913}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Set<Node> visited = new HashSet<>();\n", "entropy": 5.594191074371338, "length": 256, "finished": false, "message": null, "duration_seconds": 17.467958211898804}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Set<Node> visited = new HashSet<>();\n", "entropy": 5.594191074371338, "length": 256, "finished": false, "message": null, "duration_seconds": 16.80324673652649}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()){\n", "entropy": 5.745124816894531, "length": 256, "finished": false, "message": null, "duration_seconds": 15.521680355072021}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty() || !nodesvisited.contains(goalnode)) {\n", "entropy": 5.790698051452637, "length": 256, "finished": false, "message": null, "duration_seconds": 15.446494340896606}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> q = new ArrayDeque<>();\n", "entropy": 6.084101676940918, "length": 256, "finished": false, "message": null, "duration_seconds": 17.504480600357056}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> q = new ArrayDeque<>();\n", "entropy": 6.084101676940918, "length": 256, "finished": false, "message": null, "duration_seconds": 15.29135537147522}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        boolean found = false;\n", "entropy": 6.568350791931152, "length": 256, "finished": false, "message": null, "duration_seconds": 15.835814476013184}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!nodesvisited.isEmpty()) {\n", "entropy": 7.008291721343994, "length": 256, "finished": false, "message": null, "duration_seconds": 16.30765414237976}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.peekLast() != goalnode) {\n", "entropy": 7.612177848815918, "length": 256, "finished": false, "message": null, "duration_seconds": 17.76521897315979}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Deque<Node> queue2 = new ArrayDeque<>();\n", "entropy": 8.491992950439453, "length": 256, "finished": false, "message": null, "duration_seconds": 17.631339073181152}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.peekLast() != null) {\n", "entropy": 8.599318504333496, "length": 256, "finished": false, "message": null, "duration_seconds": 17.882277965545654}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.peekFirst() != null) {\n", "entropy": 8.975926399230957, "length": 256, "finished": false, "message": null, "duration_seconds": 15.924074649810791}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty() && !nodesvisited.contains(queue.peek())) {\n", "entropy": 9.727287292480469, "length": 256, "finished": false, "message": null, "duration_seconds": 17.41745352745056}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> tovisit = new LinkedList<>();\n", "entropy": 10.288653373718262, "length": 256, "finished": false, "message": null, "duration_seconds": 15.851093530654907}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        boolean isfound = false;\n", "entropy": 11.180269241333008, "length": 256, "finished": false, "message": null, "duration_seconds": 15.830375909805298}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        int sp = 0;\n", "entropy": 13.43789291381836, "length": 256, "finished": false, "message": null, "duration_seconds": 19.18254804611206}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // do while the queue is not empty\n", "entropy": 13.564193725585938, "length": 256, "finished": false, "message": null, "duration_seconds": 15.423475742340088}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // while there is something to do\n", "entropy": 14.05300235748291, "length": 256, "finished": false, "message": null, "duration_seconds": 15.853418111801147}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Set<Node> visited = new HashSet<>(Arrays.asList(startnode));\n", "entropy": 14.453788757324219, "length": 256, "finished": false, "message": null, "duration_seconds": 17.43024778366089}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // push(startnode)\n", "entropy": 16.619937896728516, "length": 256, "finished": false, "message": null, "duration_seconds": 15.56522512435913}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // Queue starting from goalnode\n", "entropy": 18.97249984741211, "length": 256, "finished": false, "message": null, "duration_seconds": 16.271843194961548}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        //other_function\n", "entropy": 25.586624145507812, "length": 256, "finished": false, "message": null, "duration_seconds": 16.84587049484253}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        int[] arr = {goalnode.val, 0, 0, 0};\n", "entropy": 26.562379837036133, "length": 256, "finished": false, "message": null, "duration_seconds": 15.678519248962402}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // Since we are not going to take into account redundant edges,\n", "entropy": 35.109466552734375, "length": 256, "finished": false, "message": null, "duration_seconds": 17.56005024909973}
