{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.501581192016602}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.310330867767334}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.596698522567749}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.340203762054443}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.286851644515991}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.406316041946411}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.573672771453857}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.541610479354858}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.578538179397583}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.47463870048523}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.486210107803345}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.35151982307434}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.201420545578003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.329627513885498}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.321322679519653}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.72201156616211}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.423131704330444}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.270705699920654}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.58946180343628}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.475706815719604}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.552534818649292}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.829074382781982}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.246581792831421}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.308501243591309}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.43602204322815}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.31324315071106}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.468469142913818}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.261268377304077}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.579368114471436}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.242923498153687}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.54059386253357}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.311117172241211}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.443884372711182}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.4121732711792}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.423356533050537}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.368803977966309}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.355687379837036}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.34393310546875}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.579869508743286}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.314172744750977}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.312230110168457}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.377516031265259}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.358776807785034}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.374001026153564}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.227349758148193}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.330118179321289}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.437978982925415}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.51369833946228}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.383068799972534}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.254670858383179}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.58811092376709}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.548026323318481}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.344094038009644}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.370296955108643}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.495176076889038}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.504265546798706}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.31763219833374}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.148428201675415}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.093183994293213}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.061257600784302}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.190866470336914}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.065801620483398}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.123301267623901}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.144884824752808}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.301743268966675}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.128705739974976}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.49523085355758667, "length": 256, "finished": false, "message": null, "duration_seconds": 8.169546842575073}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.319976568222046}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.705075740814209}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.431509017944336}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.236924886703491}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.461833238601685}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.30316948890686}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.01555323600769}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 2.8440418243408203, "length": 256, "finished": false, "message": null, "duration_seconds": 8.207350492477417}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {\n", "entropy": 3.0172488689422607, "length": 256, "finished": false, "message": null, "duration_seconds": 8.510232210159302}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {\n", "entropy": 3.0172488689422607, "length": 256, "finished": false, "message": null, "duration_seconds": 8.357223272323608}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()){\n", "entropy": 4.164628505706787, "length": 256, "finished": false, "message": null, "duration_seconds": 8.374900341033936}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()){\n", "entropy": 4.164628505706787, "length": 256, "finished": false, "message": null, "duration_seconds": 8.642950773239136}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (! queue.isEmpty()) {\n", "entropy": 4.934647560119629, "length": 256, "finished": false, "message": null, "duration_seconds": 8.456280708312988}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()){\n", "entropy": 5.141449451446533, "length": 256, "finished": false, "message": null, "duration_seconds": 8.335269451141357}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Set<Node> visited = new HashSet<>();\n", "entropy": 6.51616096496582, "length": 256, "finished": false, "message": null, "duration_seconds": 8.283868312835693}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(queue.size() != 0) {\n", "entropy": 6.699668884277344, "length": 256, "finished": false, "message": null, "duration_seconds": 8.279345750808716}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Deque<Node> queue2 = new ArrayDeque<>();\n", "entropy": 6.945123195648193, "length": 256, "finished": false, "message": null, "duration_seconds": 8.43857455253601}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (queue.size() > 0) {\n", "entropy": 8.43092155456543, "length": 256, "finished": false, "message": null, "duration_seconds": 8.192636966705322}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.peekLast() != null) {\n", "entropy": 10.347970962524414, "length": 256, "finished": false, "message": null, "duration_seconds": 8.266705989837646}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        visited_nodes.add(goalnode);\n", "entropy": 10.67219066619873, "length": 256, "finished": false, "message": null, "duration_seconds": 8.339709043502808}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty() && nodesvisited.contains(queue.get(queue.size() - 1))) {\n", "entropy": 11.874629974365234, "length": 256, "finished": false, "message": null, "duration_seconds": 8.36150336265564}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // while(queue.size() > 0) {\n", "entropy": 12.543821334838867, "length": 256, "finished": false, "message": null, "duration_seconds": 8.344027042388916}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // Queue the nodes in reverse order\n", "entropy": 13.7593994140625, "length": 256, "finished": false, "message": null, "duration_seconds": 8.386362552642822}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // do the breadth-first search\n", "entropy": 13.833508491516113, "length": 256, "finished": false, "message": null, "duration_seconds": 8.502492904663086}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.first().compareTo(goalnode) < 0) {\n", "entropy": 15.467643737792969, "length": 256, "finished": false, "message": null, "duration_seconds": 8.403051137924194}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(nodesvisited.size() < 1000){\n", "entropy": 16.683984756469727, "length": 256, "finished": false, "message": null, "duration_seconds": 8.243684530258179}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<List<Node>> rqueue = new LinkedList<>();\n", "entropy": 19.56842803955078, "length": 256, "finished": false, "message": null, "duration_seconds": 8.65165090560913}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        int spacenum = startnode.spacenum;\n", "entropy": 21.44584083557129, "length": 256, "finished": false, "message": null, "duration_seconds": 8.379278659820557}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // push(p)\n", "entropy": 23.142684936523438, "length": 256, "finished": false, "message": null, "duration_seconds": 8.223582029342651}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // add the nodes that are going to start the search\n", "entropy": 23.224506378173828, "length": 256, "finished": false, "message": null, "duration_seconds": 8.306399822235107}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // Check if goal is in front of startnode or not\n", "entropy": 23.39614486694336, "length": 256, "finished": false, "message": null, "duration_seconds": 8.476521968841553}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        int[] arr = { startnode.getValue() };\n", "entropy": 24.781230926513672, "length": 256, "finished": false, "message": null, "duration_seconds": 8.269486427307129}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // Since we're looking for nodes in reverse order we need to\n", "entropy": 29.41510581970215, "length": 256, "finished": false, "message": null, "duration_seconds": 8.46444320678711}
