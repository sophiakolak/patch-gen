{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.95506839086}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.96591587464}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.96686329384}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9695240569299999}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.97004183243}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9731933218499997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9748667864499998}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9780775216999997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9783327180999999}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9830641937499998}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9843800198}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9848964695}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9856348009400002}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9911208346000002}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 1.9981877343}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0046153134}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0068376249}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.01174635383}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0208642747999996}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0247697831700004}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0272190600399997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0273046366000003}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0276082514}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0334283535999997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.03510901993}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0449052974000006}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.0477966257}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.07761847437}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.10438695633}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.1055649673600003}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.1095409998399997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.11643213486}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.11685631314}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.1182224101}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.11903024275}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.11997561063}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.12107797096}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.1239186401399994}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.1490076840500008}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.1500784803999995}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 2.1596680280999996}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.4723945612}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.47773317306}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.4795206998000006}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.5192888839000003}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.54075093766}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.5622264008}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.5680576335}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.5714266644}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.57576426137}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "", "entropy": 3.9922681048000004}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.60624064845}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.6190078720999996}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.6206522701}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.6269361593}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.6270952805999994}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.64756875737}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.6642456809499997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.6759117507499997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.678486153}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 2.67963931444}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "", "entropy": 4.039378775}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth == 0) { return true; } else { return false; }", "entropy": 4.9464755853}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth == 0) { return true; } else { return false; }", "entropy": 5.034020045699998}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 3.2880961232}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 3.2981678332}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 3.33631087114}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "        return depth == 0;", "entropy": 3.657482007369999}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth != 0) { return false; }", "entropy": 3.6837842979999995}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "        return depth == 0;", "entropy": 3.6878600107}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth != 0) { return false; }", "entropy": 3.6983345498999998}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "        return depth == 0;", "entropy": 3.7331893932999995}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "", "entropy": 4.445882418}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "        return depth == 0;", "entropy": 3.7757803552600007}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 3.77695965305}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 3.8240079315999997}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "        return (depth == 0);", "entropy": 4.214007049999999}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 4.2354980612999995}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 4.2416530941}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 4.2492452211}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 4.3565679446}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth > 0) { return false; }", "entropy": 4.3673542167}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth > 0) { return false; }", "entropy": 4.3957653995}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth > 0) { return false; }", "entropy": 4.4017643497000005}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 5.2625916591}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 5.317809230729999}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0) ? true : false;", "entropy": 5.352760022600001}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 5.5819025006}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 5.66428429414}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\tif (depth > 0) {", "entropy": 6.1182809529}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 6.2755978288000005}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 6.28515829794}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 6.6122821302000006}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 6.826834921900001}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn (depth == 0);", "entropy": 7.108679049200001}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "        return depth == 0;", "entropy": 7.321621501219999}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "        return depth == 0;", "entropy": 7.4111688208}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 7.665322356339999}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 7.7960298149}
{"context": "package java_programs;\nimport java.util.*;\n\npublic class IS_VALID_PARENTHESIZATION {\n    public static Boolean is_valid_parenthesization(String parens) {\n        int depth = 0;\n\tfor (int i = 0; i < parens.length(); i++) {\n\t    Character paren = parens.charAt(i);\n\t    if (paren.equals('(')) {\n                depth++;\n\t    } else {\n\t\tdepth--;\n\t\tif (depth < 0) { return false; }\n\t    }\n\t}\n", "text": "\treturn depth == 0;", "entropy": 8.589719621099999}
