{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5065032874736002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5144915271132002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5150731593902}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5152847418530002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5186237852642}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5190585094225}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5193669939821001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5193713253215998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.519392876053}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5194735909026998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5195002631217}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5197475384878001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5202752165117}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5207272769156}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5208856550732001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5210255631185001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5211334245551998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5215986045972001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5217672399756}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5219164556172}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5221238039385}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5225739961045}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5226786195706998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5232186288972}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5232298779407}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5234426697004001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5235418238802001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5236141590118}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5240244136776999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5241424886192}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5246216050774001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5246817659337002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.524825618984}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5253945319084999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5254929039286}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5258542269275}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5258598087407999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5260017343090999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5266617892185002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5268552028026998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5269983526245}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5273157539640001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5277616303145001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5277616873145}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5279161596343}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5280106129370999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5280626909766999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5281408179037002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5286145489995}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5293750894015002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5294064121572999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5297321461411}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5299649877468}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5301310322738}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5302136489724999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.531015332943}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5311063742025}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5312245795734001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5313217660176999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5316002163186998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5316962472414001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5325698642663002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5330060729851999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5336987505418002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5340370742891}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5341147492663001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5341315658353}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5342394319539999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5342994485859998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5347360909987}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5372268142462999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5391023693491998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5396199175253}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5399308425707998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5400916645863}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5403048144552001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5407911116352001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.541659907898}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5420185041580001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5435099012579}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5472535132759999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5523955135632}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5551614260182001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.558178669224}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 0.5604851850614}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return String.valueOf(a.charAt(0)) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 2.9852367400352}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return String.valueOf(a.charAt(0)) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 3.0548494916697013}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return longest_common_subsequence(a.substring(1), b.substring(1)) + a.charAt(0);", "entropy": 4.4084712651375}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return longest_common_subsequence(a.substring(1), b.substring(1)) + a.charAt(0);", "entropy": 4.423576862085002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.substring(0, 1) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 4.5670460577175005}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return longest_common_subsequence(a.substring(1), b.substring(1)) + a.charAt(0);", "entropy": 4.592179833030002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return String.valueOf(a.charAt(0)) + longest_common_subsequence(a.substring(1, a.length()), b.substring(1, b.length()));", "entropy": 6.282125183626602}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0)+longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 4.971721254323801}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 5.6077374946338}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1),", "entropy": 4.481369018838999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1)); ", "entropy": 6.4247773481673}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return a.charAt(0) + longest_common_subsequence(a.substring(1), b.substring(1)); //return a.charAt(0) + longest_common_subsequence(a", "entropy": 14.8971826156002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            return LongestCommonSubsequence.toString(a.charAt(0)) + LongestCommonSubsequence.longest_common_subsequence(a.substring(1), b.substring(1));", "entropy": 16.198649454706004}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            System.out.println(a.charAt(0));", "entropy": 8.493245639855003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class LONGEST_COMMON_SUBSEQUENCE {\n    public static String longest_common_subsequence(String a, String b) {\n        if (a.isEmpty() || b.isEmpty()) {\n            return \"\";\n        } else if (a.charAt(0) == b.charAt(0)) {\n", "text": "            String first = String.valueOf(a.charAt(0));", "entropy": 11.443737965416403}
