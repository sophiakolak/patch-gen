{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5500045719399993}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5569586539000007}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5626457990400002}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5680358518799995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.57198391413}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5783875502499995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5799515185900006}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.58580814227}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5959545684199994}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.5959547044199995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.60045852726}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.6119154958499995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.61492679486}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.64542710654}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.66235249864}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 2.6863797541}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= (n - 1);", "entropy": 3.3268539624}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= (n - 1);", "entropy": 3.33268646702}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= (n - 1);", "entropy": 3.3665383455999995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= (n - 1);", "entropy": 3.37900634034}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= (n - 1);", "entropy": 3.3832319579999997}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= (n - 1);", "entropy": 3.50592977196}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      n &= n - 1;", "entropy": 3.5484955289300006}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n - 1);", "entropy": 3.561565024}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      n &= n - 1;", "entropy": 3.57398436746}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n - 1);", "entropy": 3.5836638323999996}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      n &= n - 1;", "entropy": 3.59617868656}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n - 1);", "entropy": 3.5980984802}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n - 1);", "entropy": 3.6080302881999993}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += n & 1;", "entropy": 3.6095077824200006}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += n & 1;", "entropy": 3.6194876296600005}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n - 1);", "entropy": 3.6248371122}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      n &= n - 1;", "entropy": 3.6351293498600006}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += n & 1;", "entropy": 3.7386585060399993}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += n & 1;", "entropy": 3.74731680898}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n-1;", "entropy": 4.14119607498}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n-1;", "entropy": 4.190851963739999}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += n & 1;", "entropy": 4.204095167419999}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1; // clear the least significant bit set", "entropy": 6.7069248865}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1; // clear the least significant bit set", "entropy": 6.845162316699998}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if ((n & 1) != 0) count++;", "entropy": 4.4097220743}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if ((n & 1) == 1) {", "entropy": 4.443894779200002}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      count += n & 1;", "entropy": 4.6205430849699995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n-1);", "entropy": 4.6249333315}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if ((n & 1) == 1) count++;", "entropy": 4.783069158600001}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.0713421999999997}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.072943353}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.076648827}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.0797672740000004}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if ((n & 1) != 0)", "entropy": 4.8606777622}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.089566969}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.1217339340000003}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.125289462}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.1437966165}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.1455183670000006}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.150205636}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.1503471149999998}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.151390829}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.1522177899999995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count++;", "entropy": 2.15934106}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      if ((n & 1) != 0) count++;", "entropy": 5.2577654923}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "    n &= (n - 1);", "entropy": 5.2712679157499975}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      n &= n-1;", "entropy": 5.2802057372}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      if ((n & 1) != 0) {", "entropy": 5.288517911}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if (n % 2 == 1) {", "entropy": 5.3695782670000005}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "    n = n & (n - 1);", "entropy": 5.3956908721999985}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 5.43366119607}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if (n % 2 == 1) count++;", "entropy": 5.5523755035}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if (n % 2 == 1) count++;", "entropy": 5.5578221139999995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += n & 1;", "entropy": 5.5647519044}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n &= n - 1;", "entropy": 5.790095810569999}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      if ((n & 1) != 0)", "entropy": 5.803727913000001}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if (n % 2 == 1)", "entropy": 5.82798302}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      n &= (n-1);", "entropy": 5.980663559099999}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count = count + (n & 1);", "entropy": 6.3429151935}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      if ((n & 0x01) != 0) count++;", "entropy": 10.0739256138}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n - 1);", "entropy": 6.7359643393}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if ((n & 1) != 0) {", "entropy": 6.780336179900001}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if (n % 2 != 0) count++;", "entropy": 6.851764621100001}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      count++;", "entropy": 3.061142699}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & n - 1;", "entropy": 7.2110218605}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "            count += n & 1;", "entropy": 7.232281852900002}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      count++;", "entropy": 3.1023690690000003}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if ((n & 0x1) == 1) {", "entropy": 7.3747445707}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        n = n & (n-1);", "entropy": 7.7009911849999995}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        ++count;", "entropy": 3.5103437782999998}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        ++count;", "entropy": 3.60761972926}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        ++count;", "entropy": 3.62174213767}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      n -= n & -n;", "entropy": 9.1611291804}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "    n = n & (n - 1);", "entropy": 9.3340411129}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "    count++;", "entropy": 4.12103439}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "    count++;", "entropy": 4.143535664999999}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        if ((n & 1)==1) count++;", "entropy": 10.660302780699999}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "       if (n % 2 == 1) {", "entropy": 10.847746733000001}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "      // Subtracting 1 from a number represented in binary as", "entropy": 18.43742938144}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += (n & 1);", "entropy": 11.9770653934}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count ++;", "entropy": 5.88688798}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        // Check if right-most bit is set", "entropy": 13.964800023019999}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        count += 1;", "entropy": 6.242983085}
{"context": "package java_programs;\n\npublic class BITCOUNT {\n    public static int bitcount(int n) {\n    int count = 0;\n    while (n != 0) {\n", "text": "        // If most significant bit is set", "entropy": 15.204660594}
