{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "", "entropy": 3.9836990588699996}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 1.988703267862}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 1.988703267862}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.001282093414}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.005629218674}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0196119265290005}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0199459348119997}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.021899100552}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.022830418602}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.026620625778}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.027552851408}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.028144233762}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.028144233762}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0303180592039998}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0313317709459997}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.03236711809}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.032513939797}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.034025659987}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.035258713316}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.035352268722}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0373277145940003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.04056898205}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.042851948985}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0428522089850003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.042852354985}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.047816324945}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.055012896033}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0608219223999997}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0608228983999997}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.061098967814}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.0653808472220003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.073659711797}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.26124106709}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.2642874609119996}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.274728687812}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.2757010110900002}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.282191569186}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.289529478797}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.2958257991770004}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.296527013985}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.2965272359849997}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.296527495985}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.296527679985}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.296847099904}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.300981315792}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.302826878742}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.303075141583}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.303334049797}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.304676063073}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.3198309897969995}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.3198311717969995}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 2.3255299297780003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.398962329475}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.4400203347680005}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.4859382827600003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.49351261876}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.5029972222430006}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.509613318056}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.5190824279669997}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.5308049486239996}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.534526025987}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.5395711121569997}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.549672278734}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.5498591145000002}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 3.56641434937}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.646906528562}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {", "entropy": 3.7090623765000004}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.7353538667110002}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.773048471033}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.787498719778}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.81831658309}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.917675232487}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.9278425160820003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 3.9486029359850003}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 4.0003826555019995}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.isEmpty() == false) {", "entropy": 4.1880789730000005}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 4.267500901816999}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 4.313694070852}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 4.615199176987}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 4.711285672722}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 4.8615482022780006}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.peek() != null) {", "entropy": 5.3691744281139995}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 5.382380150301}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty())", "entropy": 5.509750484773}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 5.7473056092779995}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (true) {", "entropy": 5.7582110282249985}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 5.781229122952}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 6.067785870033}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 6.2537020807240005}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 6.326263358985}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        boolean found = false;", "entropy": 6.873486354479}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 7.973283181485}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 8.026787779142}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 8.646354059090001}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        //while queue is not empty", "entropy": 9.664761901499999}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 10.147720648532001}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {", "entropy": 10.9650932094}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty()) {", "entropy": 10.971533975094001}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (startnode.children == null) {", "entropy": 15.568847945420002}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Node currentnode;", "entropy": 6.718131316}
