{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4631336964600001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4686781235500002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4706403792200002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4749401997499998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.47582615375}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4762892810699997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4787168197300002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.47889543128}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4788962712800002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.47995605622}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4809015808700001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.48200113027}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4820016412700001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.48286337846}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.48499583234}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4851495609000003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4855829275399999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4858859152699995}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.48785708591}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.48991760754}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4914637706299998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4928047579000001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4930262938}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.49508261286}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4953449757500001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4961449704000003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.4972375694099997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.5028365981200003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.5030728405400002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.50424097796}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.5066102722699997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.50997834935}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.5100825135500002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 1.5107064608499998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.257501484800001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.2711423526}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.2932258483}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.3003713851999996}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.3038644871}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.3131444502000003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.3393038976000002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 3.3454495402000006}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int i=0; i<=r; i++) {", "entropy": 4.104654560999999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int i=0; i<=r; i++) {", "entropy": 4.1459120441}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<r+1; c++) {", "entropy": 4.3059251355}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.7530932766799996}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.7725627016999996}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.7940372132999998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.79850967563}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.80796742783}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.8318350596}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.84129528716}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.8574238740599998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.87428518954}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.8832787176599997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.9001851677800006}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.90057204286}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.9029168902}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.90540401267}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.91478430378}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.9176324811}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 2.9232489848200003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            ArrayList<Integer> prevRow = rows.get(r-1);", "entropy": 4.97834690945}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            ArrayList<Integer> prev = rows.get(r-1);", "entropy": 4.9784399736100005}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            ArrayList<Integer> prev = rows.get(r-1);", "entropy": 5.008839655076001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            ArrayList<Integer> prev = rows.get(r-1);", "entropy": 5.1538086198399995}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int i=0; i<rows.get(r-1).size(); i++) {", "entropy": 7.509205074183999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=1; c<=r; c++) {", "entropy": 5.859972737400002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            int prev = rows.get(r-1).get(0);", "entropy": 5.912847974798}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            ArrayList<Integer> prev_row = rows.get(r-1);", "entropy": 6.100374164783999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            ArrayList<Integer> prev_row = rows.get(r-1);", "entropy": 6.11750113055}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 6.1508776077}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int j=0; j<=r; j++) {", "entropy": 6.394234962900002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<rows.get(r-1).size(); c++) {", "entropy": 9.00124094386}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            ArrayList<Integer> prev_row = rows.get(rows.size() - 1);", "entropy": 9.78473255227}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int i=0; i<rows.get(r-1).size(); i++) {", "entropy": 9.862201499310002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            int prev = rows.get(r-1).get(0);", "entropy": 7.459426222389999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 4.7868864288}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 4.79045850516}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 7.7152742904}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 4.7998263049}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 4.94559967203}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(init.get(0));", "entropy": 5.255437273399999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int e=0; e<=r; e++) {", "entropy": 8.6626097598}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<=r; c++) {", "entropy": 8.780413963400001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int c=0; c<row.size(); c++) {", "entropy": 8.926840095299998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            if (r==1) {", "entropy": 5.8666640074}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 6.08609443427}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 6.15939114739}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            int prev = rows.get(r-1);", "entropy": 6.269562026939999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            int prev = rows.get(r-1);", "entropy": 6.390945574090001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int i=0; i<=r; i++) {", "entropy": 11.212465056299997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int l=0; l<=r; l++) {", "entropy": 12.248985831300002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for( int i=0; i<=r; i++) {", "entropy": 12.526937671999999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int i=0; i<r+1; i++) {", "entropy": 13.3507131233}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 8.5271195947}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 8.80555403747}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            for (int pos=0; pos<=r; pos++) {", "entropy": 16.356256669600004}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "            row.add(1);", "entropy": 10.4241406763}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class PASCAL {\n    public static ArrayList<ArrayList<Integer>> pascal(int n) {\n        ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();\n        ArrayList<Integer> init = new ArrayList<Integer>();\n        init.add(1);\n        rows.add(init);\n\n        for (int r=1; r<n; r++) {\n            ArrayList<Integer> row = new ArrayList<Integer>();\n", "text": "", "entropy": 7.0292125500000004}
