{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 2.8950474912577997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 2.9080150561344}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9152253069964}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9262187869224}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9304002338668997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 2.9364135374569003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 2.9462454012660007}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 2.9518024204607003}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9550897517974994}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9576140214248006}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 2.9578278583508}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9639466764612004}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 2.9660131120694992}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 2.9660227361412}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 2.9681592961046}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9684404153308}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9700568186179}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 2.9732050379759998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 2.9789848764483}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 2.979526682517001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 2.988459532654199}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9897463653761998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 2.993923087776}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 2.9966723456398006}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 2.9979952295680006}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 3.0019134947760002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 3.002872936506}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.0103313503897007}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 3.0125702989237997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 3.0133824161770004}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 3.0143617385922004}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 3.0176340068039997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 3.0226797833804997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 3.0301174251681995}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 3.0354930796238}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.0412040599987002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.0666099930811996}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.0731249806897}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 3.0760136834778997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.079627155542401}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 3.0911489320201997}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.100987608603}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.103086231882}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 3.1107773959987}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 3.1243967611242995}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2;", "entropy": 3.1439556231242998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx)/2;", "entropy": 3.9279848301964}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx)/2;", "entropy": 4.013122207756701}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx)/2;", "entropy": 4.0184508791607}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx)/2;", "entropy": 4.076476667830439}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + (x / approx)) / 2;", "entropy": 4.1263338791897}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + (x / approx)) / 2f;", "entropy": 4.1735043103819995}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + (x / approx)) / 2f;", "entropy": 4.191821099112399}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + (x / approx)) / 2;", "entropy": 4.280427258650802}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = 0.5f * (approx + x / approx);", "entropy": 4.317742891509999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + (x/approx)) / 2;", "entropy": 4.369605389202601}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + (x/approx)) / 2;", "entropy": 4.373758600615701}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + (x/approx)) / 2;", "entropy": 4.43977497325914}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx)/2f;", "entropy": 4.6236787174058}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = 0.5 * (approx + x / approx);", "entropy": 4.8626133075040014}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = 0.5 * (approx + x / approx);", "entropy": 4.908342226757001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = approx - (approx*approx-x)/(2*approx);", "entropy": 7.101784592309168}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2.0;", "entropy": 5.474637505426499}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2;", "entropy": 5.6540608012837}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 5.6680433461008}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2f;", "entropy": 5.700596428811199}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (x/approx + approx) / 2;", "entropy": 5.900742410813999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = 0.5*(approx + x/approx);", "entropy": 5.977506779054}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (x/approx + approx) / 2f;", "entropy": 6.100316555402}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = x/approx + approx/2f;", "entropy": 6.333720346571}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = x/approx + approx/2f;", "entropy": 6.479151975969999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            System.out.println(approx);", "entropy": 3.9383319299786996}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) * 0.5f;", "entropy": 6.661443203475999}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = ((approx + x / approx) / 2f);", "entropy": 6.7144839232257985}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            System.out.println(\"approx: \" + approx);", "entropy": 7.126567412799998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) /2f;", "entropy": 7.2624454944622}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = ((approx * x) + x) / (approx * 2f);", "entropy": 10.76211255336334}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = ((approx + (x/approx)) / 2);", "entropy": 7.783599686858199}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = approx + (x - approx * approx) / (2 * approx);", "entropy": 7.814645857600001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            x = approx;", "entropy": 5.028504787098701}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            double better = (approx + x/approx)/2;", "entropy": 8.502256780503402}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = 1/2 * (approx + x / approx);", "entropy": 8.746682201455002}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            System.out.println(\"x= \" + x + \" approx= \" + approx + \" x-approx= \" + (x-approx));", "entropy": 16.317833730504006}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = approx + (x - approx*approx)/(2*approx);", "entropy": 9.317963524687801}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x / approx) / 2f;", "entropy": 9.6736642911508}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx +  x/approx) / 2f;", "entropy": 9.7703160717914}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + 2 * x / approx) / 3f;", "entropy": 10.3375889999682}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = x / approx + approx / 2;", "entropy": 6.2539994973000015}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            double newApprox = (approx + (x/approx)) / 2;", "entropy": 10.72134516550282}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            approx = (approx + x/approx) / 2.0;", "entropy": 10.9587861246224}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            // System.out.println(approx);", "entropy": 6.71514945051}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            x = x / 2 + approx / 2;", "entropy": 6.972025424300001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            println(\"x: \" + x + \" approx: \" + approx);", "entropy": 12.234271385199998}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            double next = (approx + x / approx)/2;", "entropy": 12.265283659419598}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            double prevApprox = approx;", "entropy": 7.8447258555}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            double diff = x - approx*approx;", "entropy": 8.014016953556}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            double temp = x / (2f*approx) + approx;", "entropy": 16.070187908981197}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            // x = (x + (x/x)) / 2", "entropy": 18.4577232806}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            printSqrt(approx);", "entropy": 14.102248924376001}
{"context": "package java_programs;\nimport java.util.*;\n\n\npublic class SQRT {\n    public static double sqrt(double x, double epsilon) {\n        double approx = x / 2f;\n        while (Math.abs(x-approx) > epsilon) {\n", "text": "            x = (2 * approx) - (approx) * x;", "entropy": 26.365639941731498}
