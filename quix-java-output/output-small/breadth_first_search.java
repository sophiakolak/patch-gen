{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.337809324264526}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.282454013824463}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.232766151428223}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.220571994781494}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.252829313278198}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.172466993331909}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.2561938762664795}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.283469200134277}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.290317058563232}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.156003952026367}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.221307992935181}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.220439672470093}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.298433780670166}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.310908317565918}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.26390266418457}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.230438947677612}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.15431809425354}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.161898851394653}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.441019535064697}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.386317014694214}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.320012092590332}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.220547437667847}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.233422756195068}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.291015148162842}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.266039609909058}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.377768278121948}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.280932426452637}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.167840003967285}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.269184827804565}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.236162424087524}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.250048875808716}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.29735803604126}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.228625774383545}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.241780757904053}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.285582065582275}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.1419196128845215}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.27746057510376}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.308501482009888}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.4890217781066895}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.29398250579834}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.30118989944458}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.312501907348633}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.055796146392822}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.156347751617432}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.477174282073975}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()) {\n", "entropy": 0.7924362421035767, "length": 256, "finished": false, "message": null, "duration_seconds": 4.2919933795928955}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 3.7135672569274902, "length": 256, "finished": false, "message": null, "duration_seconds": 4.287684202194214}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 3.7135672569274902, "length": 256, "finished": false, "message": null, "duration_seconds": 4.093088626861572}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 0) {\n", "entropy": 3.7135672569274902, "length": 256, "finished": false, "message": null, "duration_seconds": 4.277926683425903}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        for (Node node : queue) {\n", "entropy": 4.4787116050720215, "length": 256, "finished": false, "message": null, "duration_seconds": 4.305334806442261}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (!queue.isEmpty()) {\n", "entropy": 4.606204032897949, "length": 256, "finished": false, "message": null, "duration_seconds": 4.242029190063477}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 1) {\n", "entropy": 4.946025848388672, "length": 256, "finished": false, "message": null, "duration_seconds": 4.704406976699829}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.size() > 1) {\n", "entropy": 4.946025848388672, "length": 256, "finished": false, "message": null, "duration_seconds": 4.350635766983032}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        boolean found = false;\n", "entropy": 5.181813716888428, "length": 256, "finished": false, "message": null, "duration_seconds": 4.161676645278931}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty()){\n", "entropy": 5.340973854064941, "length": 256, "finished": false, "message": null, "duration_seconds": 4.254109859466553}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!nodesvisited.isEmpty()) {\n", "entropy": 5.355219841003418, "length": 256, "finished": false, "message": null, "duration_seconds": 4.227694034576416}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!nodesvisited.isEmpty()) {\n", "entropy": 5.355219841003418, "length": 256, "finished": false, "message": null, "duration_seconds": 4.265628337860107}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (goalnode != null) {\n", "entropy": 5.428430557250977, "length": 256, "finished": false, "message": null, "duration_seconds": 4.266647577285767}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Set<Node> visited = new HashSet<>();\n", "entropy": 6.024224758148193, "length": 256, "finished": false, "message": null, "duration_seconds": 4.2446043491363525}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Set<Node> visited = new HashSet<>();\n", "entropy": 6.024224758148193, "length": 256, "finished": false, "message": null, "duration_seconds": 4.308753490447998}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        return queue.size() > 0;\n", "entropy": 6.122903823852539, "length": 256, "finished": false, "message": null, "duration_seconds": 4.1329185962677}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (queue.size() == 0) {\n", "entropy": 6.212261199951172, "length": 256, "finished": false, "message": null, "duration_seconds": 4.2294652462005615}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        return nodesvisited.contains(goalnode);\n", "entropy": 6.283055305480957, "length": 256, "finished": false, "message": null, "duration_seconds": 4.3075525760650635}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (goalnode == null) {\n", "entropy": 6.293068885803223, "length": 256, "finished": false, "message": null, "duration_seconds": 4.380656719207764}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Deque<Node> queue2 = new ArrayDeque<>();\n", "entropy": 6.402758598327637, "length": 256, "finished": false, "message": null, "duration_seconds": 4.11780858039856}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (queue.size() > 0) {\n", "entropy": 6.512764930725098, "length": 256, "finished": false, "message": null, "duration_seconds": 4.344435930252075}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        for (;;) {\n", "entropy": 7.175650596618652, "length": 256, "finished": false, "message": null, "duration_seconds": 4.2738566398620605}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!nodesvisited.contains(startnode)) {\n", "entropy": 7.4280195236206055, "length": 256, "finished": false, "message": null, "duration_seconds": 4.36001992225647}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        boolean found = true;\n", "entropy": 7.935805320739746, "length": 256, "finished": false, "message": null, "duration_seconds": 4.316365957260132}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        boolean first = true;\n", "entropy": 8.094024658203125, "length": 256, "finished": false, "message": null, "duration_seconds": 4.141002893447876}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isFull()) {\n", "entropy": 8.236712455749512, "length": 256, "finished": false, "message": null, "duration_seconds": 4.5054099559783936}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        for (Node n = startnode; n != goalnode; n = n.next) {\n", "entropy": 8.499161720275879, "length": 256, "finished": false, "message": null, "duration_seconds": 4.425162076950073}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> queue = new Queue<>();\n", "entropy": 8.568235397338867, "length": 256, "finished": false, "message": null, "duration_seconds": 4.34989857673645}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        return queue.size() >= 1;\n", "entropy": 8.787630081176758, "length": 256, "finished": false, "message": null, "duration_seconds": 4.1462061405181885}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (goalnode.equals(startnode)) {\n", "entropy": 8.853618621826172, "length": 256, "finished": false, "message": null, "duration_seconds": 4.141109228134155}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        if (queue.size() == 1)\n", "entropy": 9.209114074707031, "length": 256, "finished": false, "message": null, "duration_seconds": 4.197395324707031}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty() && queue.peek().getId() == startnode.getId()) {\n", "entropy": 10.461852073669434, "length": 256, "finished": false, "message": null, "duration_seconds": 4.258692741394043}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        boolean visited = queue.size() > 0;\n", "entropy": 10.578458786010742, "length": 256, "finished": false, "message": null, "duration_seconds": 4.129670143127441}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.peek().equals(startnode)) {\n", "entropy": 11.563100814819336, "length": 256, "finished": false, "message": null, "duration_seconds": 4.201566457748413}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> queue_visited = new Queue<>();\n", "entropy": 11.705349922180176, "length": 256, "finished": false, "message": null, "duration_seconds": 4.321232795715332}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        for (Node prednode : nodesvisited) {\n", "entropy": 11.772810935974121, "length": 256, "finished": false, "message": null, "duration_seconds": 4.095719337463379}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // add nodes\n", "entropy": 12.085653305053711, "length": 256, "finished": false, "message": null, "duration_seconds": 4.188883066177368}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        int[] arr = new int[queue.size()];\n", "entropy": 12.481557846069336, "length": 256, "finished": false, "message": null, "duration_seconds": 4.1713385581970215}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        for(Node q : queue) {\n", "entropy": 12.514811515808105, "length": 256, "finished": false, "message": null, "duration_seconds": 4.257101058959961}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty() && startnode == queue.peekLast().getNode()) {\n", "entropy": 12.771437644958496, "length": 256, "finished": false, "message": null, "duration_seconds": 4.072900056838989}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (queue.firstNode() != null) {\n", "entropy": 12.947136878967285, "length": 256, "finished": false, "message": null, "duration_seconds": 4.275262117385864}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        int sp = 0;\n", "entropy": 13.44521427154541, "length": 256, "finished": false, "message": null, "duration_seconds": 4.122895956039429}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        Queue<Node> queue_success = new ArrayDeque<>();\n", "entropy": 13.817296981811523, "length": 256, "finished": false, "message": null, "duration_seconds": 4.281625270843506}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        nodeSearch(startnode, queue, goalnode);\n", "entropy": 14.649999618530273, "length": 256, "finished": false, "message": null, "duration_seconds": 4.287138223648071}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // do a breadth-first search\n", "entropy": 15.908990859985352, "length": 256, "finished": false, "message": null, "duration_seconds": 4.407991170883179}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // push(startnode)\n", "entropy": 15.99891471862793, "length": 256, "finished": false, "message": null, "duration_seconds": 4.309900760650635}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while(!queue.isEmpty() && queue.peek().obj instanceof Node) {\n", "entropy": 16.0493106842041, "length": 256, "finished": false, "message": null, "duration_seconds": 4.2065980434417725}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // Bin search\n", "entropy": 17.133272171020508, "length": 256, "finished": false, "message": null, "duration_seconds": 4.227230072021484}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        while (!queue.isEmpty() && activenodes.contains(queue.pop())) {\n", "entropy": 18.581680297851562, "length": 256, "finished": false, "message": null, "duration_seconds": 4.1700286865234375}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        java.util.List<Node> sorted = java.util.Arrays.asList(queue);\n", "entropy": 22.608699798583984, "length": 256, "finished": false, "message": null, "duration_seconds": 4.284046173095703}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // process the nodes that are on this node\n", "entropy": 23.00000762939453, "length": 256, "finished": false, "message": null, "duration_seconds": 4.1710522174835205}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        HashSet<Node> lastgoal = new HashSet<>(queue);\n", "entropy": 24.0291748046875, "length": 256, "finished": false, "message": null, "duration_seconds": 4.267943859100342}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // check that we really found a node with id '01'\n", "entropy": 41.80809020996094, "length": 256, "finished": false, "message": null, "duration_seconds": 4.100693702697754}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // compute the next perimeter ofall the nodes.\n", "entropy": 52.134918212890625, "length": 256, "finished": false, "message": null, "duration_seconds": 4.194555282592773}
{"context": "package java_programs;\nimport java.util.*;\nimport java.util.ArrayDeque;\n\n\npublic class BREADTH_FIRST_SEARCH {\n\n    public static Set<Node> nodesvisited = new HashSet<>();\n\n    public static boolean breadth_first_search(Node startnode, Node goalnode) {\n        Deque<Node> queue = new ArrayDeque<>();\n        queue.addLast(startnode);\n\n        nodesvisited.add(startnode);\n\n", "text": "        // Since we're looking for nodes in the terminal we need to create the queue of those nodes that are not in the self-terminal\n", "entropy": 71.63459014892578, "length": 256, "finished": false, "message": null, "duration_seconds": 4.33326530456543}
